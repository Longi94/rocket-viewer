version: 2.1

jobs:

  lint:
    working_directory: ~/rocket-viewer
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - run:
          name: Setup custom environment variables
          command: |
            echo 'export NG_CLI_ANALYTICS=ci' >> $BASH_ENV
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install angular cli
          command: sudo npm install -g @angular/cli@9.0.1 > /dev/null
      - run:
          name: install-dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: angular-lint
          command: ng lint

  build-wasm:
    working_directory: ~/rocket-viewer
    docker:
      - image: circleci/rust:1.41.0
    steps:
      - checkout
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
          working_directory: boxcars-wasm
      - restore_cache:
          keys:
            - cargo-cache-{{ arch }}-{{ checksum "boxcars-wasm/Cargo.lock" }}
      - run:
          name: Install wasm-pack
          command: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run:
          name: Build wasm
          command: wasm-pack build
          working_directory: boxcars-wasm
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/release/.fingerprint
            - target/release/build
            - target/release/deps
          key: cargo-cache-{{ arch }}-{{ checksum "boxcars-wasm/Cargo.lock" }}
      - persist_to_workspace:
          root: boxcars-wasm
          paths:
            - pkg

  build-dev:
    working_directory: ~/rocket-viewer
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - attach_workspace:
          at: boxcars-wasm/pkg
      - run:
          name: Setup custom environment variables
          command: |
            echo 'export NG_CLI_ANALYTICS=ci' >> $BASH_ENV
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install angular cli
          command: sudo npm install -g @angular/cli@9.0.1 > /dev/null
      - run:
          name: install-dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Copy wasm
          command: mkdir -p src/app/boxcars && cp boxcars-wasm/pkg/*.{js,ts,wasm} src/app/boxcars/
      - run:
          name: angular-build
          command: ng build
      - store_artifacts:
          path: dist/rocket-viewer
      - persist_to_workspace:
          root: dist
          paths:
            - rocket-viewer

  deploy-dev:
    working_directory: ~/rocket-viewer
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: dist
      - run:
          name: Remove old files
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo $SSH_PASS | sudo -S rm -rf $FRONTEND_DIR_DEV/*"
      - run:
          name: Create dir for files in home
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "mkdir -p ~/rocket-viewer-dev"
      - run:
          name: Copy artifacts to host
          command: scp -rP $SSH_PORT dist/rocket-viewer/* "$SSH_USER@$SSH_HOST:/home/$SSH_USER/rocket-viewer-dev/"
      - run:
          name: Copy artifacts to deploy folder
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo $SSH_PASS | sudo -S cp -r ~/rocket-viewer-dev/* $FRONTEND_DIR_DEV/"
      - run:
          name: Remove dir in home
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "rm -rf ~/rocket-viewer-dev/"

  build-prod:
    working_directory: ~/rocket-viewer
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - attach_workspace:
          at: boxcars-wasm/pkg
      - run:
          name: Setup custom environment variables
          command: |
            echo 'export NG_CLI_ANALYTICS=ci' >> $BASH_ENV
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install angular cli
          command: sudo npm install -g @angular/cli@9.0.1 > /dev/null
      - run:
          name: install-dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Copy wasm
          command: mkdir -p src/app/boxcars && cp boxcars-wasm/pkg/*.{js,ts,wasm} src/app/boxcars/
      - run:
          name: angular-build
          command: ng build --prod
      - store_artifacts:
          path: dist/rocket-viewer
      - persist_to_workspace:
          root: dist
          paths:
            - rocket-viewer

  deploy-prod:
    working_directory: ~/rocket-viewer
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: dist
      - run:
          name: Remove old files
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo $SSH_PASS | sudo -S rm -rf $FRONTEND_DIR/*"
      - run:
          name: Create dir for files in home
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "mkdir -p ~/rocket-viewer-prod"
      - run:
          name: Copy artifacts to host
          command: scp -rP $SSH_PORT dist/rocket-viewer/* "$SSH_USER@$SSH_HOST:/home/$SSH_USER/rocket-viewer-prod/"
      - run:
          name: Copy artifacts to deploy folder
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo $SSH_PASS | sudo -S cp -r ~/rocket-viewer-dev/* $FRONTEND_DIR/"
      - run:
          name: Remove dir in home
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "rm -rf ~/rocket-viewer-prod/"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - lint
      - build-wasm:
          filters:
            branches:
              only:
                - master
      - build-dev:
          requires:
            - build-wasm
          filters:
            branches:
              only:
                - master
      - deploy-dev:
          requires:
            - build-dev
          filters:
            branches:
              only:
                - master
      - build-prod:
          requires:
            - build-wasm
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - deploy-prod:
          requires:
            - lint
            - build-prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
